#=====================================================================
# id
#
#=====================================================================
task_id: task_id

#=====================================================================
# 对人友好的任务名字
#
#=====================================================================
task_name: task_name

#=====================================================================
# 虚拟的ID，可以在单机上模拟出伪分布式。参数起随意的名字，在分布式环境下无需关心。
# 如果在一台机器上开多个实例，每个virtual_id就要配置成不一样的。
#=====================================================================
virtual_id: VIRTUAL_ID

#=====================================================================
# 保存爬虫配置task.yaml的位置。如果不设置会默认放在user.home/.myspider/下
# 在单机模式，保存的文件和数据都会放在这个地方，因此保证空间足够放的下你要抓的内容。
#=====================================================================
spider_work_dir: c:/code/play/temp

#=====================================================================
# 当队里空的时候，线程再等待多久退出
#
#=====================================================================
wait_url_sleep_time_ms: 1000

#=====================================================================
# 任务起始状态
# RUN |　PAUSE | CANCEL
#
#=====================================================================
task_status: RUN #这个放在这里不太合适，再看看

#=====================================================================
# 每次从队列里拿出来多少个url
#
#=====================================================================
scheduler_batch_size: 1 #每次去队列里拿到的url数目

#=====================================================================
#
#
#=====================================================================
task_thread_count: 1 #任务线程数目

#=====================================================================
# scheduler_class_name可选的参数
# com.oxf1.myspiderer.scheduler.impl.MemoryScheduler    基于内存的队列
# com.oxf1.myspiderer.scheduler.impl.FileQueueScheduler 基于文件的队列
# com.oxf1.myspiderer.scheduler.impl.MongoScheduler     基于mongodb
# com.oxf1.myspiderer.scheduler.impl.RedisScheduler     基于Redis队列
#=====================================================================
scheduler_class_name: com.oxf1.myspiderer.scheduler.impl.MemoryScheduler

#=====================================================================
# dedup_class_name 可选的参数
# com.oxf1.myspiderer.dedup.impl.EhCacheDedup 基于ehcache去重
# com.oxf1.myspiderer.dedup.impl.MemoryDedup  基于内存去重
# com.oxf1.myspiderer.dedup.impl.MongoDedup   基于mongodb去重
# com.oxf1.myspiderer.dedup.impl.RedisDedup   基于Redis去重
#=====================================================================
dedup_class_name: com.oxf1.myspiderer.dedup.impl.MemoryDedup

#=====================================================================
# downloader_class_name 可选的参数
# com.oxf1.myspiderer.dedup.impl.EhCacheDedup 基于ehcache去重
# com.oxf1.myspiderer.dedup.impl.MemoryDedup  基于内存去重
# com.oxf1.myspiderer.dedup.impl.MongoDedup   基于mongodb去重
# com.oxf1.myspiderer.dedup.impl.RedisDedup   基于Redis去重
#=====================================================================
downloader_class_name: downloader.GroovyProcessor

#=====================================================================
# pipline_class_name 可选的参数
# com.oxf1.myspiderer.pipline.impl.LocalFilePipline 数据存储到本机
# com.oxf1.myspiderer.pipline.impl.MongoDbPipline  数据保存到mongodb里
#=====================================================================
pipline_class_name: com.oxf1.myspiderer.pipline.impl.LocalFilePipline

#=====================================================================
# processor_class_name 可选的参数
# com.oxf1.myspiderer.processor.impl.GroovyProcessor 基于ehcache去重
#=====================================================================
processor_class_name: com.oxf1.myspiderer.processor.impl.GroovyProcessor

#=====================================================================
# cacher_class_name 可选的参数
# com.oxf1.myspiderer.cacher.impl.LocalDiskCacher 缓存页面到磁盘
# com.oxf1.myspiderer.cacher.impl.MongoCacher     缓存页面到mongodb
#=====================================================================
cacher_class_name: com.oxf1.myspiderer.cacher.impl.LocalDiskCacher

#=====================================================================
# groovy_file 可选的参数
# com.oxf1.myspiderer.dedup.impl.EhCacheDedup 基于ehcache去重
#=====================================================================
groovy_file: TaskExcample.groovy
