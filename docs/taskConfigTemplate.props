[task]
#=====================================================================
# task.id
#
#=====================================================================
id = task_id
#=====================================================================
# task.name
# 对人友好的任务名字
#
#=====================================================================
name = task_name
#=====================================================================
# task.virtual.id
# 虚拟的ID，可以在单机上模拟出伪分布式。参数起随意的名字，在分布式环境下无需关心。
# 如果在一台机器上开多个实例，每个virtual_id就要配置成不一样的。
#=====================================================================
virtual.id = VIRTUAL_ID
#=====================================================================
# task.work.dir
# 保存爬虫配置task.yaml的位置。如果不设置会默认放在user.home/.myspider/下
# 在单机模式，保存的文件和数据都会放在这个地方，因此保证空间足够放的下你要抓的内容。
#=====================================================================
work.dir = /path/to/workdir/
#=====================================================================
# task.wait.url.timeout
# 当队里空的时候，线程再等待多久退出
#=====================================================================
wait.url.timeout = 1000
#=====================================================================
# task.status任务起始状态
# RUN |　PAUSE | CANCEL
#
#=====================================================================
status = RUN #这个放在这里不太合适，再看看
#=====================================================================
# task.thread.count
#
#=====================================================================
thread.count = 1

[scheduler]
#=====================================================================
# 每次从队列里拿出来多少个url
#
#=====================================================================
batch.size = 1 #每次去队列里拿到的url数目
#=====================================================================
# scheduler.class.name可选的参数
# MemoryScheduler    基于内存的队列
# FileQueueScheduler 基于文件的队列
# MongoScheduler     基于mongodb
# RedisScheduler     基于Redis队列
#=====================================================================
package = com.oxf1.myspiderer.scheduler.impl
class.name = ${package}.MemoryScheduler

redis.host = 127.0.0.1
mongo.host = 127.0.0.1
mongo.port = 27017

[dedup]
#=====================================================================
# dedup.class.name 可选的参数
# EhCacheDedup 基于ehcache去重
# MemoryDedup  基于内存去重
# MongoDedup   基于mongodb去重
# RedisDedup   基于Redis去重
#=====================================================================
package = com.oxf1.myspiderer.dedup.impl
class.name = ${package}.MemoryDedup

redis.host = 127.0.0.1
mongo.host = 127.0.0.1

[pipline]
#=====================================================================
# class.name 可选的参数
# LocalFilePipline 数据存储到本机
# MongoDbPipline  数据保存到mongodb里
#=====================================================================
package = com.oxf1.myspiderer.pipline.impl
class.name = ${package}.LocalFilePipline

[downloader]
#=====================================================================
# downloader.class.name 下载
#=====================================================================
package = com.oxf1.myspiderer.downloader.impl
class.name = ${package}.HttpDownloader

[processor]
#=====================================================================
# processor.class.name 可选的参数
# GroovyProcessor 基于ehcache去重
#=====================================================================
package = com.oxf1.myspiderer.processor.impl
class.name = ${package}.GroovyProcessor

[cacher]
#=====================================================================
# cacher.class.name 可选的参数
# LocalDiskCacher 缓存页面到磁盘
# MongoCacher     缓存页面到mongodb
#=====================================================================
package = com.oxf1.myspiderer.cacher.impl
class.name = ${package}.LocalDiskCacher

mongo.host = 127.0.0.1
mongo.port = 27017

[plugin]
url = http://xxx/my.jar

[rt.ext] #运行开始确定的参数，无需认为添加。比如根据task.name确定的网页、数据文件保存位置等
mongodb.dedup.db.name =
mongodb.cacher.db.name =
task.logger =
local.file.pipline.data.file =
local.task.work.dir =
local.task.cacher.dir =
local.queue.dir =
task.log.dir =

[rt.var] #运行过程中会不断变化
task.control.cmd = RUN #这个放在这里不太合适，再看看
